///This class is auto generated by scripts,don't edit it!!

using System;
using LuaInterface;
using Newtonsoft.Json.Linq;

public partial class {{struct_name}}CfgMgr : CfgMgrTemplate<{{struct_name}}CfgMgr, {{column_list[0].type}}, {{struct_name}}Vo> { 

    static {{struct_name}}CfgMgr instance_;

    public static {{struct_name}}CfgMgr instance {
        get {
            if (instance_ == null)
                instance_ = new {{struct_name}}CfgMgr();
            return instance_;
        }
    }

    LuaTable _mTable;

    public LuaTable ItemTableLuaTable {
        get {
            if (ItemTable == null)
                return null;
            if (_mTable == null) {
                _mTable = LuaScriptMgr.Instance.lua.NewTable();
                foreach (var _key in ItemTable.Keys)
                    _mTable[_key] = ItemTable[_key];
            }
            return _mTable;
        }
    }
};

public partial class {{struct_name}}Vo :IconfigWith1Key<{{column_list[0].type}}> {

    {% for column in column_list -%}
    /// <summary>
    /// {{column.comment}}
    /// </summary>
    {% if column.is_language -%}
    protected {{column.type}} m_{{column.field_name}};
    public {{column.type}}  {{column.field_name}}  {
        get {
            return Language.GetValue(m_{{column.field_name}});
        }
        set {
            if (m_{{column.field_name}} == value) return;
            m_{{column.field_name}} = value;
        }
    }
    {% else -%}
    public {{column.type}} {{column.field_name}} { get; set; }
    {% endif -%}
    
    {% endfor -%}

    public {{struct_name}}Vo()
    {

    }

	public {{column_list[0].type}} GetKey1() { return {{column_list[0].field_name}}; }

    public bool readItem(TabFile tf)
    {
        {% for column in column_list -%}
	    {{column.field_name}} = tf.Get<{{column.type}}>("{{column.name}}");
	    {% endfor -%}
        return true;
    }

    public bool readItem(JToken data)
    {
        {% for column in column_list -%}
        {{column.field_name}} = data["{{column.name}}"].ToObject<{{column.type}}>();
        {% endfor -%}
        return true;
    }
}